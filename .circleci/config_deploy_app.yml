version: 2.1

jobs:
  deploy:
    docker:
    - image: amazon/aws-cli
    steps:
    - checkout
    - run:
        name: Install kubectl
        command: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          mv kubectl /usr/local/bin/
    - run:
        name: Configure AWS CLI
        command: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $AWS_REGION
    - run:
        name: Setup kubectl
        command: |
          aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME
    - run:
        name: Install jq
        command: |
          yum install -y jq
    - run:
        name: Retrieve MongoDB Secret from AWS
        command: |
          SECRET_JSON=$(aws secretsmanager get-secret-value --secret-id workwiz-mongodb-creds --query SecretString --output text)
          echo $SECRET_JSON | jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' > .env
          cat .env
    - run:
        name: Create Kubernetes Secret
        command: |
          source .env
          kubectl create secret generic mongodb-secret \
            --from-literal=MONGO_URI="mongodb://$username:$password@$MONGO_PRIVATE_IP:27017/" \            --dry-run=client -o yaml | kubectl apply -f -
          echo $username
          echo $password
          echo "mongodb://$username:$password@$MONGO_PRIVATE_IP:27017/"
    - run:
        name: Deploy generics to Kubernetes
        command: kubectl apply -f ./current_working/3_tier_app_kubernetes/

    - run:
        name: Create ECR Pull Secret in Kubernetes
        command: |
          kubectl create secret docker-registry ecr-registry-secret \
            --docker-server=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com \
            --docker-username=AWS \
            --docker-password=$(aws ecr get-login-password --region $AWS_REGION) \
            --namespace default || true  # Ignore error if secret already exists
    - run:
        name: Deploy app to Kubernetes
        command: |
          cat <<EOF | kubectl apply -f -
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: webapp-deployment
            labels:
              app: webapp
          spec:
            replicas: 1 # Increase for HA/LB
            selector:
              matchLabels:
                app: webapp
            template:
              metadata:
                labels:
                  app: webapp
              spec:
                containers:
                - name: tasky
                  image: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/lone_klughardt:latest
                  ports:
                  - containerPort: 8080 # comes from Image Spec
                  env:
                  - name: MONGODB_URI
                    valueFrom:
                      secretKeyRef:
                        name: mongodb-secret # Secret File
                        key: MONGO_URI # value for this key
                imagePullSecrets:
                  - name: ecr-registry-secret
          EOF

workflows:
  deploy:
    jobs:
    - deploy
